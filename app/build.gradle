apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.upday.shutterdemo.pickyup"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "BEARER_TOKEN", BEARER_TOKEN
        buildConfigField "String", "BASE_URL", BASE_URL

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled true
    }

    allprojects {
        gradle.projectsEvaluated {
            tasks.withType(JavaCompile) {
                options.compilerArgs << "-Xmaxerrs" << "4000"
                options.compilerArgs << "-Xmaxwarns" << "4000"
            }
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //Support Library
    //noinspection GradleCompatible
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibVersion"
    implementation "com.android.support:support-v4:$rootProject.ext.supportLibVersion"
    implementation "com.android.support:design:$rootProject.ext.supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.supportLibVersion"
    implementation "com.android.support:cardview-v7:$rootProject.ext.supportLibVersion"
    implementation "com.android.support:preference-v14:$rootProject.ext.supportLibVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.ext.constraintLayoutVersion"

    //Room
    implementation "android.arch.persistence.room:runtime:$rootProject.ext.archVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.ext.archVersion"

    //Paging
    implementation "android.arch.paging:runtime:$rootProject.ext.pagingVersion"

    //Lifecycle
    implementation "android.arch.lifecycle:extensions:$rootProject.ext.lifeCycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.ext.lifeCycleVersion"
    testImplementation "android.arch.core:core-testing:$rootProject.ext.lifeCycleVersion"

    //Retrofit
    implementation "com.squareup.retrofit2:adapter-rxjava:$rootProject.ext.rxJavaVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.rxJavaVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.rxJavaVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okHttpVersion"

    //RxJava
    implementation "io.reactivex:rxjava:$rootProject.ext.rxJavaLibVersion"
    implementation "io.reactivex:rxandroid:$rootProject.ext.rxAndroidVersion"

    //Square Libs
    implementation "com.jakewharton.timber:timber:$rootProject.ext.timberVersion"
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.ext.glideVersion"
    implementation("com.github.bumptech.glide:okhttp3-integration:$rootProject.ext.glideVersion") {
        exclude group: 'glide-parent'
    }

    //Stetho
    implementation "com.facebook.stetho:stetho:$rootProject.ext.stethoVersion"
    implementation "com.facebook.stetho:stetho-okhttp3:$rootProject.ext.stethoVersion"

    //Google Play Services
    implementation "com.google.android.gms:play-services-ads:$rootProject.ext.googleAdsVersion"
    implementation "com.google.firebase:firebase-ads:$rootProject.ext.adsVersion"
    implementation "com.google.firebase:firebase-core:$rootProject.ext.coreVersion"

    //Other
    implementation "com.ToxicBakery.viewpager.transforms:view-pager-transforms:$rootProject.ext.viewPagerTransformerVersion"
    implementation("com.mikepenz:aboutlibraries:$rootProject.ext.aboutLibrariesVersion") {
        transitive = true
    }

    //Testing
    implementation "com.android.support.test.espresso:espresso-idling-resource:$rootProject.ext.espressoVersion"
    androidTestImplementation "com.android.support:support-annotations:$rootProject.ext.supportLibVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
    androidTestImplementation "com.android.support.test:rules:$rootProject.ext.testVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.testVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.ext.espressoVersion"
    testImplementation "junit:junit:$rootProject.ext.JUnitVersion"

    //Mockito and PowerMock
    testImplementation "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testImplementation "org.powermock:powermock:$rootProject.ext.powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4:$rootProject.ext.powerMockitoVersion"
    testImplementation "org.powermock:powermock-api-mockito:$rootProject.ext.powerMockitoVersion"
}

apply plugin: 'com.google.gms.google-services'
